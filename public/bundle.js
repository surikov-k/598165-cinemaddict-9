!function(e){var t={};function i(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(s,n,function(t){return e[t]}.bind(null,n));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);const s="afterbegin",n="beforeend",l=e=>{const t=document.createElement("div");return t.innerHTML=e,t.firstChild},a=(e,t,i=n)=>{switch(i){case s:e.prepend(t);break;case n:e.append(t)}},r=e=>{e&&e.remove()};const o={beginner:"Novice",intermediate:"Fan",advanced:"Movie Buff"};class m{constructor(e){this._film=e,this._title=e.title,this._originalTitle=e.originalTitle,this._director=e.director,this._writres=e.writres,this._actors=e.actors,this._poster=e.poster,this._rating=e.rating,this._created=e.created,this._duration=e.duration,this._country=e.country,this._genres=e.genres,this._description=e.description,this._isAddedToWatchlist=e.isAddedToWatchlist,this._isFavorite=e.isFavorite,this._isWatched=e.isWatched,this._element=null,this._closePopup=this.closePopup.bind(this),this._onEscKeydown=this._onEscKeydown.bind(this)}getElement(){return this._element||(this._element=l(this.getTemplate()),document.addEventListener("keydown",this._onEscKeydown),this._element.querySelector(".film-details__comment-input").addEventListener("focus",()=>{document.removeEventListener("keydown",this._onEscKeydown)}),this._element.querySelector(".film-details__comment-input").addEventListener("blur",()=>{document.addEventListener("keydown",this._onEscKeydown)}),this._element.querySelector(".film-details__close-btn").addEventListener("click",this._closePopup)),this._element}removeElement(){this._element=null}closePopup(){r(this._element),this.removeElement()}getTemplate(){return`<section class="film-details">\n              <form class="film-details__inner" action="" method="get">\n                <div class="form-details__top-container">\n                  <div class="film-details__close">\n                    <button class="film-details__close-btn" type="button">close</button>\n                  </div>\n                  <div class="film-details__info-wrap">\n                    <div class="film-details__poster">\n                      <img class="film-details__poster-img" src="${this._poster}" alt="">\n\n                      <p class="film-details__age">18+</p>\n                    </div>\n\n                    <div class="film-details__info">\n                      <div class="film-details__info-head">\n                        <div class="film-details__title-wrap">\n                          <h3 class="film-details__title">${this._title}</h3>\n                          <p class="film-details__title-original">Original: ${this._originalTitle}</p>\n                        </div>\n\n                        <div class="film-details__rating">\n                          <p class="film-details__total-rating">${this._rating}</p>\n                        </div>\n                      </div>\n\n                      <table class="film-details__table">\n                        <tr class="film-details__row">\n                          <td class="film-details__term">Director</td>\n                          <td class="film-details__cell">${this._director}</td>\n                        </tr>\n                        <tr class="film-details__row">\n                          <td class="film-details__term">Writers</td>\n                          <td class="film-details__cell">${this._writres.join(", ")}</td>\n                        </tr>\n                        <tr class="film-details__row">\n                          <td class="film-details__term">Actors</td>\n                          <td class="film-details__cell">${this._actors.join(", ")}</td>\n                        </tr>\n                        <tr class="film-details__row">\n                          <td class="film-details__term">Release Date</td>\n                          <td class="film-details__cell">${this._created.toDateString()}</td>\n                        </tr>\n                        <tr class="film-details__row">\n                          <td class="film-details__term">Runtime</td>\n                          <td class="film-details__cell">${c.formatDuration(this._duration)}</td>\n                        </tr>\n                        <tr class="film-details__row">\n                          <td class="film-details__term">Country</td>\n                          <td class="film-details__cell">${this._country}</td>\n                        </tr>\n                        <tr class="film-details__row">\n                          <td class="film-details__term">Genres</td>\n                          <td class="film-details__cell">\n                            ${[...this._genres].map(e=>`<span class="film-details__genre">${e}</span>`).join(" ")}\n                          </td>\n                        </tr>\n                      </table>\n\n                      <p class="film-details__film-description">\n                        ${this._description}\n                      </p>\n                    </div>\n                  </div>\n\n                  <section class="film-details__controls">\n                    <input type="checkbox" class="film-details__control-input visually-hidden" id="watchlist" name="watchlist"\n                    ${this._isAddedToWatchlist?"checked":""}\n                    >\n                    <label for="watchlist" class="film-details__control-label film-details__control-label--watchlist">Add to watchlist</label>\n\n                    <input type="checkbox" class="film-details__control-input visually-hidden" id="watched" name="watched"\n                    ${this._isWatched?"checked":""}\n                    >\n                    <label for="watched" class="film-details__control-label film-details__control-label--watched">Already watched</label>\n\n                    <input type="checkbox" class="film-details__control-input visually-hidden" id="favorite" name="favorite"\n                    ${this._isFavorite?"checked":""}\n                    >\n                    <label for="favorite" class="film-details__control-label film-details__control-label--favorite">Add to favorites</label>\n                  </section>\n                </div>\n\n                <div class="form-details__bottom-container">\n                  <section class="film-details__comments-wrap">\n                    <h3 class="film-details__comments-title">Comments <span class="film-details__comments-count">0</span></h3>\n\n                    <ul class="film-details__comments-list"></ul>\n\n                    <div class="film-details__new-comment">\n                      <div for="add-emoji" class="film-details__add-emoji-label">\n                        <img src="images/emoji/smile.png" width="55" height="55" alt="emoji">\n                      </div>\n\n                      <label class="film-details__comment-label">\n                        <textarea class="film-details__comment-input" placeholder="Select reaction below and write comment here" name="comment">Great movie!</textarea>\n                      </label>\n\n                      <div class="film-details__emoji-list">\n                        <input class="film-details__emoji-item visually-hidden" name="comment-emoji" type="radio" id="emoji-smile" value="sleeping" checked>\n                        <label class="film-details__emoji-label" for="emoji-smile">\n                          <img src="./images/emoji/smile.png" width="30" height="30" alt="emoji">\n                        </label>\n\n                        <input class="film-details__emoji-item visually-hidden" name="comment-emoji" type="radio" id="emoji-sleeping" value="neutral-face">\n                        <label class="film-details__emoji-label" for="emoji-sleeping">\n                          <img src="./images/emoji/sleeping.png" width="30" height="30" alt="emoji">\n                        </label>\n\n                        <input class="film-details__emoji-item visually-hidden" name="comment-emoji" type="radio" id="emoji-gpuke" value="grinning">\n                        <label class="film-details__emoji-label" for="emoji-gpuke">\n                          <img src="./images/emoji/puke.png" width="30" height="30" alt="emoji">\n                        </label>\n\n                        <input class="film-details__emoji-item visually-hidden" name="comment-emoji" type="radio" id="emoji-angry" value="grinning">\n                        <label class="film-details__emoji-label" for="emoji-angry">\n                          <img src="./images/emoji/angry.png" width="30" height="30" alt="emoji">\n                        </label>\n                      </div>\n                    </div>\n                  </section>\n                </div>\n              </form>\n            </section>`}_onEscKeydown(e){"Esc"!==e.key&&"Escape"!==e.key||(this.closePopup(),document.removeEventListener("keydown",this._onEscKeydown))}}class c{constructor(e){this._film=e,this._title=e.title,this._poster=e.poster,this._rating=e.rating,this._created=e.created,this._duration=e.duration,this._genres=e.genres,this._description=e.description,this._isAddedToWatchlist=e.isAddedToWatchlist,this._isFavorite=e.isFavorite,this._isWatched=e.isWatched,this._element=null}static calculateComments(e){return O.comments.filter(t=>t.movieTitle===e).length}static formatDuration(e){const t=parseInt(e/60,10);return`${t}h ${e-60*t}m`}getElement(){return this._element||(this._element=l(this.getTemplate()),this._element.querySelector(".film-card__poster").addEventListener("click",()=>{this.onClick()})),this._element}removeElement(){this._element=null}onClick(){a(document.querySelector("body"),new m(this._film).getElement())}getTemplate(){return`<article class="film-card">\n            <h3 class="film-card__title">${this._title}</h3>\n            <p class="film-card__rating">${this._rating}</p>\n            <p class="film-card__info">\n              <span class="film-card__year">${this._created.getFullYear()}</span>\n              <span class="film-card__duration">${c.formatDuration(this._duration)}</span>\n              <span class="film-card__genre">${[...this._genres][0]}</span>\n            </p>\n            <img src="${this._poster}" alt="" class="film-card__poster">\n            <p class="film-card__description">${this._tuncateDescription()}</p>\n            <a class="film-card__comments">${c.calculateComments(this._title)} comments</a>\n            <form class="film-card__controls">\n              <button class="film-card__controls-item button film-card__controls-item--add-to-watchlist ${this._isAddedToWatchlist?"film-card__controls-item--active":""}">Add to watchlist</button>\n              <button class="film-card__controls-item button film-card__controls-item--mark-as-watched ${this._isWatched?"film-card__controls-item--active":""}">Mark as watched</button>\n              <button class="film-card__controls-item button film-card__controls-item--favorite ${this._isFavorite?"film-card__controls-item--active":""}">Mark as favorite</button>\n            </form>\n          </article>`}_tuncateDescription(){return this._description.length<=140?this._description:this._description.slice(0,139)+"&hellip;"}}class d{constructor(){this._element=null}getElement(){return this._element||(this._element=l(this.getTemplate())),this._element}removeElement(){this.element=null}getTemplate(){return'<button class="films-list__show-more">Show more</button>'}}class _{constructor(){this._element=null}getElement(){if(!this._element){this._element=l(this.getTemplate());const e=this._element.querySelector(".films-list__container");this.showCards(e);const t=new d;a(this._element,t.getElement()),t.getElement().addEventListener("click",()=>{this.showCards(e),O.cardsDisplayed>=O.films.length&&t.getElement().remove()})}return this._element}removeElement(){this._element=null}showCards(e){O.films.slice(O.cardsDisplayed,O.cardsDisplayed+L).forEach(t=>{const i=new c(t);a(e,i.getElement())}),O.cardsDisplayed=O.cardsDisplayed+L}getTemplate(){return'<section class="films-list">\n              <h2 class="films-list__title visually-hidden">All movies. Upcoming</h2>\n              <div class="films-list__container"></div>\n            </section>'}}const h={TOP_RATED:"Top rated",MOST_COMMENTED:"Most commented"};class u{constructor(e){this._filmsListTitle=e,this._element=null}getElement(){if(!this._element){this._element=l(this.getTemplate());const e=this._element.querySelector(".films-list__container");if(this._filmsListTitle===h.TOP_RATED){const[t,i]=this._getTwoMostRated();a(e,new c(t).getElement()),a(e,new c(i).getElement())}if(this._filmsListTitle===h.MOST_COMMENTED){const[t,i]=this._getTwoMostCommented();a(e,new c(t).getElement()),a(e,new c(i).getElement())}}return this._element}removeElement(){this._element=null}getTemplate(){return`<section class="films-list--extra">\n              <h2 class="films-list__title">${this._filmsListTitle}</h2>\n              <div class="films-list__container">\n              </div>\n            </section>`}_getTwoMostRated(){return O.films.slice().sort((e,t)=>t.rating-e.rating).slice(0,2)}_getTwoMostCommented(){return O.films.slice().sort((e,t)=>c.calculateComments(t.title,O.comments)-c.calculateComments(e.title,O.comments)).slice(0,2)}}class f{constructor(){this._element=null}getElement(){return this._element||(this._element=l(this._getTemplate()),a(this._element,(new _).getElement()),a(this._element,new u(h.TOP_RATED).getElement()),a(this._element,new u(h.MOST_COMMENTED).getElement())),this._element}_getTemplate(){return'<section class="films"></section>'}}class p{constructor(){this._element=null}getElement(){return this._element||(this._element=l(this.getTemplate())),this._element}getTemplate(){return'<div class="no-result">\n              There is no movies for your request.\n            </div>'}}const g=Math.round(10*Math.random()+10),v=Math.round(100*Math.random()+10),b={sleeping:"sleeping",neutralFace:"neutral-face",grinning:"grinning"},w=[b.sleeping,b.neutralFace,b.grinning],y=["Anthony","Anne","Heinz","Richard","Erich","Mary Beth","Dan","Tim","John"],E=["Mann","Wigton","Herald","Weil","von Stroheim","Hughes","Duryea","Macoveev","Doe"],T=["Made for Each Other","Popeye the Sailor Meets Sindbad the Sailor","Sagebrush trail","Santa Claus Conquers the Martians","The Dance of Life","The Great Flamarion","The Man with the Golden Arm"],M=["images/posters/made-for-each-other.png","images/posters/popeye-meets-sinbad.png","images/posters/sagebrush-trail.jpg","images/posters/santa-claus-conquers-the-martians.jpg","images/posters/the-dance-of-life.jpg","images/posters/the-great-flamarion.jpg","images/posters/the-man-with-the-golden-arm.jpg"],j=["Lorem ipsum dolor sit amet, consectetur adipiscing elit.Cras aliquet varius magna, nporta ligula feugiat eget.","Fusce tristique felis at fermentum pharetra.Aliquam id orci ut lectus varius viverra.","Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.","Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum.","Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui.","Sed sed nisi sed augue convallis suscipit in sed felis.","Aliquam erat volutpat.","Nunc fermentum tortor ac porta dapibus.","In rutrum ac purus sit amet tempus."],S=["Musical","Western","Drama","Comedy","Cartoon","Mystery"],$=["USA","France","Italy","Russia"],A={moviesWatched:Math.round(30*Math.random())},D=e=>e[Math.floor(Math.random()*e.length)],C=e=>e.slice().sort(()=>Math.random()-.5),k=e=>{const t=new Date(e),i=new Date;return new Date(Math.round(Math.random()*(i.getTime()-t.getTime()+t.getTime())))},W=()=>`${D(y)} ${D(E)}`,F=()=>({title:D(T),get originalTitle(){let e=[...this.title.toLowerCase()].reverse().join("");return(e=e.split(" ").map(e=>e.length>3?e.charAt(0).toUpperCase()+e.slice(1):e)).join(" ")},director:W(),writres:new Array(Math.floor(2*Math.random()+1)).fill("a").map(()=>W()),actors:new Array(Math.floor(4*Math.random()+2)).fill("").map(()=>W()),poster:D(M),rating:parseFloat(8*Math.random()+1).toFixed(1),created:k("1900-1-1"),duration:Math.round(120*Math.random()+60),country:D($),genres:new Set(C(S).slice(0,Math.floor(2*Math.random()+1))),description:C(j).slice(0,Math.floor(5*Math.random()+1)).join(" "),isAddedToWatchlist:Boolean(Math.round(Math.random())),isFavorite:Boolean(Math.round(Math.random())),isWatched:Boolean(Math.round(Math.random()))}),x=()=>({movieTitle:D(T),text:D(j),user:W(),created:k("2018-1-1"),emotion:D(w)});Math.round(2e5*Math.random+5e4);i.d(t,"CARDS_PER_CLICK",function(){return L}),i.d(t,"state",function(){return O});const L=5,O=Object.assign({},{cardsDisplayed:0,films:[],comments:[]});O.films=(()=>new Array(g).fill("").map(F))(),O.comments=(()=>new Array(v).fill("").map(x))();const q=document.querySelector(".header"),P=document.querySelector(".main");a(q,(new class{constructor(){this._element=null}getElement(){return this._element||(this._element=l(this.getTemplate())),this._element}removeElement(){this._element=null}getTemplate(){return'<form class="header__search search">\n              <input type="text" name="search" class="search__field" placeholder="Search movies">\n              <svg fill="#7171D8" class="search__film-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="19" viewBox="0 0 20 19">\n                <path fill-rule="nonzero" d="M2 0v4.524h2.833V0h11.334v4.524H19V0h1v19h-1v-4.524h-2.833V19H4.833v-4.524H2V19H0V0h2zm0 7.238v4.524h2.833V7.238H2zm14.167 0v4.524H19V7.238h-2.833z"/>\n              </svg>\n              <button type="submit" class="visually-hidden">Search</button>\n              <button class="search__reset" type="reset">Reset</button>\n            </form>'}}).getElement()),a(q,new class{constructor({moviesWatched:e}){this._moviesWatched=e,this._element=null}getElement(){return this._element||(this._element=l(this.getTemplate())),this._element}removeElement(){this._element=null}getTemplate(){return`<section class="header__profile profile">\n            <p class="profile__rating">${this._getUserRating(this._moviesWatched)}</p>\n            <img class="profile__avatar" src="images/bitmap@2x.png" alt="Avatar" width="35" height="35">\n          </section>`}_getUserRating(e){return e<=10?o.beginner:e>=11&&e<=20?o.intermediate:e>=21?o.advanced:void 0}}(A).getElement()),a(P,(new class{constructor(){this._filters=[{name:"Watchlist",count:O.films.filter(e=>e.isAddedToWatchlist).length},{name:"History",count:O.films.filter(e=>e.isWatched).length},{name:"Favorites",count:O.films.filter(e=>e.isFavorite).length}],this._element=null}getElement(){return this._element||(this._element=l(this.getTemplate())),this._element}removeElement(){this._element=null}getTemplate(){return`<nav class="main-navigation">\n            <a href="#all" class="main-navigation__item main-navigation__item--active">All movies</a>\n            ${this._filters.map(this._getFilterTemplate).join("")}\n              <a href="#stats" class="main-navigation__item main-navigation__item--additional">Stats</a>\n            </nav>`}_getFilterTemplate(e){return`<a href="#${e.name.toLowerCase()}" class="main-navigation__item">${e.name}\n              <span class="main-navigation__item-count">${e.count}</span>\n              </a>`}}).getElement()),a(P,(new class{constructor(){this._element=null}getElement(){return this._element||(this._element=l(this._getTemplate())),this._element}_getTemplate(){return'<ul class="sort">\n            <li><a href="#" class="sort__button sort__button--active">Sort by default</a></li>\n            <li><a href="#" class="sort__button">Sort by date</a></li>\n            <li><a href="#" class="sort__button">Sort by rating</a></li>\n          </ul>'}}).getElement()),O.films.length?a(P,(new f).getElement()):a(P,(new p).getElement())}]);
//# sourceMappingURL=bundle.js.map